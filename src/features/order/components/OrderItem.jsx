import { useState } from "react";
import { MdAccessTime } from "react-icons/md"; // Ch·ªù x√°c nh·∫≠n
import { FaTruck } from "react-icons/fa"; // V·∫≠n chuy·ªÉn
import { MdLocalShipping } from "react-icons/md"; // Ch·ªù giao h√†ng
import { MdCheckCircle } from "react-icons/md"; // Ho√†n th√†nh
import { MdCancel } from "react-icons/md"; // ƒê√£ h·ªßy
import { MdReplay } from "react-icons/md"; // Tr·∫£ h√†ng/Ho√†n ti·ªÅn
import { MdArrowForwardIos } from "react-icons/md";
import OrderDetailModal from "./OrderDetailItem";
import OrderActions from "./OrderActions";

const STATUS_NOTES = {
  // Hai c√°i d∆∞·ªõi n√†y gom th√†nh pending
  new: "üÜï ƒê∆°n h√†ng v·ª´a ƒë∆∞·ª£c t·∫°o, ch·ªù shop x√°c nh·∫≠n",
  confirmed: "‚úÖ ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n, chu·∫©n b·ªã x·ª≠ l√Ω",
  // C√°i d∆∞·ªõi l√† Ch·ªù giao h√†ng
  processing: "üõí Shop ƒëang chu·∫©n b·ªã ƒë∆°n h√†ng cho b·∫°n",
  // Hai c√°i d∆∞·ªõi l√† c·ªßa V·∫≠n chuy·ªÉn
  shipping: "üöö ƒê∆°n h√†ng ƒëang tr√™n ƒë∆∞·ªùng ƒë·∫øn kho trung chuy·ªÉn",
  delivering: "üì¶ Shipper ƒëang giao h√†ng, vui l√≤ng gi·ªØ ƒëi·ªán tho·∫°i",
  //Ho√†n th√†nh
  completed: "üéâ B·∫°n ƒë√£ nh·∫≠n h√†ng th√†nh c√¥ng. ƒê·ª´ng qu√™n ƒë√°nh gi√° s·∫£n ph·∫©m nh√©!",
  //H·ªßy
  cancelled: "‚ùå ƒê∆°n h√†ng ƒë√£ b·ªã h·ªßy",
  cancel_requested: "‚ö†Ô∏è Y√™u c·∫ßu h·ªßy ƒë∆°n ƒë√£ ƒë∆∞·ª£c g·ª≠i, ch·ªù shop ph·∫£n h·ªìi",
  //Ho√†n ti·ªÅn
  refund: "üîÑ ƒê∆°n h√†ng trong qu√° tr√¨nh tr·∫£ h√†ng/ho√†n ti·ªÅn",
};

const OrderItem = ({ order }) => {
  const [selectedOrder, setSelectedOrder] = useState(null);

  return (
    <div className="border rounded-lg mb-3 shadow-sm bg-white">
      {/* Header: Shop + tr·∫°ng th√°i */}
      <div className="flex justify-between items-center px-4 py-2 border-b bg-gray-50">
        <div className="flex items-center gap-2">
          <span className="bg-red-500 text-white text-xs px-2 py-1 rounded">
            Y√™u th√≠ch
          </span>
          <h2 className="font-semibold">
            ƒê∆°n h√†ng #{order.items[0].product.name}
          </h2>
        </div>
        <div className="flex flex-col items-end">
          <span
            className={`inline-flex items-center gap-1 text-sm px-3 py-1 rounded-full ${
              order.status === "new"
                ? "bg-yellow-100 text-yellow-600"
                : order.status === "confirmed"
                ? "bg-yellow-100 text-yellow-600"
                : order.status === "processing"
                ? "bg-blue-100 text-blue-600"
                : order.status === "shipping"
                ? "bg-blue-100 text-blue-600"
                : order.status === "delivering"
                ? "bg-indigo-100 text-indigo-600"
                : order.status === "completed"
                ? "bg-green-100 text-green-600"
                : order.status === "cancelled"
                ? "bg-red-100 text-red-600"
                : order.status === "cancel_requested"
                ? "bg-orange-100 text-orange-600"
                : order.status === "refund"
                ? "bg-purple-100 text-purple-600"
                : "bg-gray-100 text-gray-500"
            }`}
          >
            {order.status === "new" && <MdAccessTime size={16} />}
            {order.status === "confirmed" && <MdAccessTime size={16} />}
            {order.status === "processing" && <FaTruck size={16} />}
            {order.status === "shipping" && <FaTruck size={16} />}
            {order.status === "delivering" && <MdLocalShipping size={16} />}
            {order.status === "completed" && <MdCheckCircle size={16} />}
            {order.status === "cancelled" && <MdCancel size={16} />}
            {order.status === "refund" && <MdReplay size={16} />}
            {order.status === "cancel_requested" && <MdCancel size={16} />}
            {order.statusLabel || order.status}
          </span>
        </div>
      </div>

      {/* S·∫£n ph·∫©m ƒë·∫ßu ti√™n (preview) */}
      <div className="flex justify-between items-start px-4 py-3">
        <div className="flex items-center gap-4">
          <img
            src={order.items[0].product.images[0]}
            alt={order.items[0].product.name}
            className="w-16 h-16 object-cover rounded-lg border shadow-sm hover:scale-105 transition"
          />
          <div>
            <p className="text-gray-600 font-medium">
              {order.items[0].product.name}
            </p>
            <p className="text-xs text-gray-400 mt-1">
              S·ªë l∆∞·ª£ng s·∫£n ph·∫©m: x{order.items.length}
            </p>
          </div>
        </div>

        {/* B√™n ph·∫£i */}
        <div className="text-right flex flex-col gap-2">
          <div className="text-lg font-bold text-blue-600">
            {order.totalAmount.toLocaleString()}‚Ç´
          </div>
          <button
            onClick={() => setSelectedOrder(order)}
            className="px-4 py-2 text-sm rounded-lg bg-blue-500 text-white hover:bg-blue-600 transition flex items-center gap-1"
          >
            Xem chi ti·∫øt
            <MdArrowForwardIos size={14} />
          </button>
        </div>
      </div>

      <OrderDetailModal
        open={!!selectedOrder}
        onClose={() => setSelectedOrder(null)}
        order={selectedOrder}
      />

      {/* Footer: t·ªïng ti·ªÅn + h√†nh ƒë·ªông + Ph√≠ v·∫≠n chuy·ªÉn */}
      <div className="px-4 py-3 bg-gray-50 flex justify-between items-start border-t">
        {/* B√™n tr√°i: Ph√≠ v·∫≠n chuy·ªÉn */}
        <div className="text-sm text-gray-600 space-y-1">
          <p className="flex items-center gap-2">
            <span className="font-medium">Ph√≠ v·∫≠n chuy·ªÉn:</span>
            <span className="text-green-600">
              +{order.shippingFee.toLocaleString()}‚Ç´
            </span>
          </p>

          <p className="text-xs text-gray-400">
            Ng√†y ƒë·∫∑t: {new Date(order.createdAt).toLocaleDateString("vi-VN")}
          </p>
          {/* Ghi ch√∫ tr·∫°ng th√°i */}
          <p className="text-xs text-gray-500 italic mt-2">
            {STATUS_NOTES[order.status]}
          </p>
        </div>

        {/* B√™n ph·∫£i: T·ªïng ti·ªÅn + n√∫t h√†nh ƒë·ªông */}
        <div className="flex flex-col items-end gap-2">
          <p className="text-lg">
            Th√†nh ti·ªÅn:{" "}
            <span className="text-red-600 font-bold">
              {order.finalAmount.toLocaleString()}‚Ç´
            </span>
          </p>
          <OrderActions order={order} />
        </div>
      </div>
    </div>
  );
};

export default OrderItem;
